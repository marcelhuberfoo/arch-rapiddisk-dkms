From cc46cabfe998b7616b573a55370f53a8b4d61738 Mon Sep 17 00:00:00 2001
From: Marcel Huber <marcel.huber@hsr.ch>
Date: Tue, 29 Aug 2017 15:37:58 +0200
Subject: fix compilation warnings

- comparison between pointer and zero character constant [-Wpointer-compare]
---
 src/archive.c | 4 ++--
 src/core.c    | 8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git src/archive.c src/archive.c
index e774bab..334bf8f 100644
--- src/archive.c
+++ src/archive.c
@@ -56,7 +56,7 @@ int archive_rd_volume(struct RD_PROFILE *prof, unsigned char *src,
 	in = (char *)malloc(BUFSZ);
 	out = (char *)malloc(BUFSZ);
 
-	if ((in == '\0') || (out == '\0')) {
+	if ((in == NULL) || (out == NULL)) {
 		printf("Error. Unable to acquire memory space.\n");
 		return -ENOMEM;
 	}
@@ -150,7 +150,7 @@ int restore_rd_volume(struct RD_PROFILE *prof, unsigned char *src,
 	in = (char *)malloc(BUFSZ);
 	out = (char *)malloc(BUFSZ);
 
-	if ((in == '\0') || (out == '\0')) {
+	if ((in == NULL) || (out == NULL)) {
 		printf("Error. Unable to acquire memory space.\n");
 		return -ENOMEM;
 	}
diff --git src/core.c src/core.c
index fc1e8c1..48f0b4a 100644
--- src/core.c
+++ src/core.c
@@ -352,7 +352,7 @@ int detach_device(struct RD_PROFILE *rd_prof, RC_PROFILE * rc_prof, unsigned cha
 		rc_prof = rc_prof->next;
 	}
 
-	if ((buf = (char *)malloc(BUFSZ)) == '\0') {
+	if ((buf = (char *)malloc(BUFSZ)) == NULL) {
 		printf("%s: malloc: Unable to allocate memory.\n", __func__);
 		return -1;
 	}
@@ -459,7 +459,7 @@ int cache_map(struct RD_PROFILE *rd_prof, struct RC_PROFILE * rc_prof,
 		rc_prof = rc_prof->next;
 	}
 
-	if ((buf = (char *)malloc(BUFSZ)) == '\0') {
+	if ((buf = (char *)malloc(BUFSZ)) == NULL) {
 		printf("%s: malloc: Unable to allocate memory.\n", __func__);
 		return -1;
 	}
@@ -547,7 +547,7 @@ int cache_unmap(struct RC_PROFILE *prof, unsigned char *string)
 		return -ENOENT;
 	}
 
-	if ((buf = (char *)malloc(BUFSZ)) == '\0') {
+	if ((buf = (char *)malloc(BUFSZ)) == NULL) {
 		printf("%s: malloc: Unable to allocate memory.\n", __func__);
 		return -ENOMEM;
 	}
@@ -599,7 +599,7 @@ int rdsk_flush(struct RD_PROFILE *rd_prof, RC_PROFILE *rc_prof, unsigned char *s
 		rc_prof = rc_prof->next;
 	}
 
-	if ((buf = (char *)malloc(BUFSZ)) == '\0') {
+	if ((buf = (char *)malloc(BUFSZ)) == NULL) {
 		printf("%s: malloc: Unable to allocate memory.\n", __func__);
 		return -ENOMEM;
 	}
-- 
2.14.1

